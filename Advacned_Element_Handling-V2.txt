1-VerifyCurrentDateTime
			DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
		   //get current date time with Date()
		   Date date = new Date();
		   System.out.println(dateFormat.format(date));
		   
		   SimpleDateFormat gmtDateFormat = new SimpleDateFormat("EEE MMM dd yyyy HH:mm");
		   gmtDateFormat.setTimeZone(TimeZone.getTimeZone("GMT"));
		   System.out.println("Current Date and Time in GMT time zone: " + gmtDateFormat.format(new Date()));
		   gmtDateFormat.setTimeZone(TimeZone.getTimeZone("PDT"));
		   System.out.println("Current Date and Time in PDTtime zone: " + gmtDateFormat.format(new Date()));
		   gmtDateFormat.setTimeZone(TimeZone.getTimeZone("PST"));
		   String s = gmtDateFormat.format(new Date());
		   System.out.println("Current Date and Time in PST time zone: " + gmtDateFormat.format(new Date()));
		   //driver.wait(3000);

		   System.out.println("click on patron page");
		   
		   driver.findElement(By.id("patronAccountExternalLinkComponent")).click();
		  
		   System.out.println(s);
		   
	       driver.findElement(By.id("reviewsMenuLinkAny2Component")).click();

	       if(driver.getPageSource().contains(s))
		   {
	    	   System.out.println("value is presnt" +s);
			   
		   }  
		   else
		   {
			   System.out.println("value is not presnt");
		   }
		   driver.findElement(By.id("deleteReviewDirectLinkComponent")).click();
	       driver.findElement(By.id("okDirectLinkComponent")).click();
	     }

2-Tool_tip_verification
WebElement NewButton = driver.findElement(By.xpath(".//*[@id='copyright']/a"));
String Tooltip = NewButton.getAttribute("href");
System.out.println(Tooltip);		 

3-storeAndverifyText

@Test
	public void testWindowAlert() throws Exception{
	 
	driver.findElement(By.id("searchString")).sendKeys("pollution");
	Thread.sleep(5000);
	driver.findElement(By.xpath(".//*[@id='searchImageSumbitComponent']")).click();
	Thread.sleep(5000);
	
	String variable1 = driver.findElement(By.xpath(".//*[@id='searchResultsAnyComponent']/div[1]/div[2]/span[1]")).getText();
	System.out.println(variable1);
	
	driver.findElement(By.id("searchString")).sendKeys("water");
	driver.findElement(By.xpath(".//*[@id='searchImageSumbitComponent']")).click();
	Thread.sleep(5000);
	
	String variable2 = driver.findElement(By.xpath(".//*[@id='searchResultsAnyComponent']/div[1]/div[2]/span[1]")).getText();
	System.out.println(variable2);
	
	if (variable1.contentEquals(variable2))
	{
		System.out.println("Resutls are equal");
		assertTrue(variable1.equals(variable2));
	}
	
	else
	{
		assertFalse(variable1.equals(variable2));
		System.out.println("Resutls are not equal");
	}
	
	
	}
	
4-Sorting
@Test
  public void testSorting() throws Exception {
    driver.get(baseUrl + "/iii/encore/homepage?lang=eng");
    driver.findElement(By.id("searchString")).clear();
    driver.findElement(By.id("searchString")).sendKeys("gone girl");
    driver.findElement(By.xpath(".//*[@id='searchImageSumbitComponent']")).click();
    Thread.sleep(35000);
    driver.findElement(By.xpath(".//*[@id='reviewsPageLinkComponent']")).click();
    driver.findElement(By.cssSelector("span.currentSort")).click();
    
    
    int i;
    for (i =1; i<=10;i++)
    {
    	String v2 = driver.findElement(By.xpath(".//*[@id='reviewsListAnyComponent']/div[1]/div[0+i]/p[1]")).getText(); 
    	System.out.println("Value of V2=" +v2);
    	
    	
    }
    
  }	
  
5-Autosuggestion_selecation
  public void SearchSuggestion() {
	//Map l=new HashMap();
	 List l=new ArrayList();
  driver.get("http://google.com");
  driver.findElement(By.id("gbqfq")).sendKeys("vam");
  driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
  WebElement div = driver.findElement(By.className("sbsb_b"));
  System.out.println("element-1  was found ");
   int i=1;
   int j=i+1;
   try{
	    for(i=1; i<j;i++)
	      {
	    	 WebElement val=driver.findElement(By.xpath("//*[@id='gsr']/div[2]/div[2]/div[1]/div/ul/li["+i+"]"));
	    	 String suggestion = div.findElement(By.xpath("//*[@id='gsr']/div[2]/div[2]/div[1]/div/ul/li["+i+"]")).getText();  
	    	l.add(val);
	    	

	     System.out.println(suggestion);
	     System.out.println(l.get(0));
	     j++;
	    
	      }
	    
	    }catch(Exception e){//Catch block will catch and handle the exception.
	    	//e.printStackTrace();
	    	System.out.println("***Please search for another word***"); 
	        System.out.println();
	     {
	    	 
	     }
	    }  
   int size = l.size();
   System.out.println(size);
      driver.findElement(By.id("gbqfq")).sendKeys(Keys.DOWN);
   driver.findElement(By.xpath(".//*[@id='gbqfb']")).click();
   
 }

6-Contain_Txt_Url
@Test
	public void testWindowAlert() throws Exception{

	driver.findElement(By.id("searchString")).sendKeys("WATER");
	Thread.sleep(5000);
	driver.findElement(By.xpath(".//*[@id='searchImageSumbitComponent']")).click();
	Thread.sleep(5000);
	WebElement NewButton = driver.findElement(By.xpath(".//*[@id='recentSearchLinkComponent']"));
    String Tooltip = NewButton.getAttribute("href");
    System.out.println(Tooltip);
    
    Boolean txt = Tooltip.contains("search");
     
    /*if (txt.TRUE)
    	System.out.println("txt is passed");
    else 	 
    	System.out.println("txt is failed");
    
    Boolean txt1 = Tooltip.contains("hitmain");
    
    if (txt1.TRUE)
    	System.out.println("txt is passed");
    else 	 
    	System.out.println("txt is failed");
    */
    if (Tooltip.contains("788"))
    		{
    	System.out.println("txt is passed");
    		}
    else 	 
    	System.out.println("txt is failed");
    
    
	Thread.sleep(5000);	
	Thread.sleep(5000);

	}

7-Count_Text	
@Test
	public void testWindowAlert() throws Exception{

	driver.findElement(By.id("searchString")).sendKeys("WATER");
	Thread.sleep(5000);
	driver.findElement(By.xpath(".//*[@id='searchImageSumbitComponent']")).click();
	Thread.sleep(5000);	
	List <WebElement> totalLinks=driver.findElements(By.linkText("Please log in to see more details"));  
	System.out.println("total links "+totalLinks.size());
	
	List<WebElement> allLinkElements = driver.findElements(By.xpath("//a"));
	int linkcount = allLinkElements.size();
	System.out.println(linkcount);
	
		
	String v2 = driver.findElement(By.id("searchString")).getText();
	
	int size1 ;
	size1 = driver.getPageSource().split("Additional actions").length-1;
	System.out.println(size1);

	}
	
	
	=======================
	package commands;
import java.util.regex.Pattern;
import java.util.List;
import java.util.Set;
import java.util.concurrent.TimeUnit;
import org.junit.*;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.*;
import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

public class action_event 
{

	private WebDriver driver;
	private String baseUrl, baseUrl2,Url_Naukari,Url_Gmail,Url_ignou;
	private boolean acceptNextAlert = true;
	private StringBuffer verificationErrors = new StringBuffer();
	

  @Before
  public void setUp() throws Exception 
  {
    driver = new FirefoxDriver();
    Url_Naukari = "https://www.naukri.com/advanced-search";
    Url_Gmail = "https://accounts.google.com/SignUp?continue=https%3A%2F%2Fwww.google.co.in%2F%3Fgfe_rd%3Dcr%26ei%3DiEYCWOH7GvDs8Aft74DwDg&hl=en";
    //Url_ignou="http://www.ignou.ac.in/";
    Url_ignou="http://puchd.ac.in/";
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
  }


  @Test
  public void actionsEvents() throws Exception {
	  Actions actions = new Actions (driver);
    /*driver.get(Url_ignou);
  
//contextClick command-1
    //WebElement R1 = driver.findElement(By.xpath("//div[@class='item active']//a[contains(.,'Results')]"));
    WebElement R1 = driver.findElement(By.xpath(".//*[@id='servicemenue']/ul/li[1]/strong/a[contains(text(),'Home')]"));

    Actions b1 = new Actions(driver);
    Thread.sleep(3000);
    b1.contextClick(R1).sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.ENTER).perform();
    Thread.sleep(3000);
    //.contextClick(R1).sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.ENTER).perform();
   
//Get Windoes Hanldes command and Switch to child window

    String winHandleBefore = driver.getWindowHandle();
    for (String winHandle : driver.getWindowHandles()) 
    {
      // Switch to child window
     driver.switchTo().window(winHandle);
    }
 
    Thread.sleep(3000);
    
    WebElement admin= driver.findElement(By.xpath(".//*[@id='hmenue']//a[contains(text(),'Admissions')]"));
    admin.click();
    
    Thread.sleep(5000);
 
//Close the Child winodw and go to the parent 
    driver.close();
   driver.switchTo().window(winHandleBefore);
    WebElement results= driver.findElement(By.xpath(" .//*[@id='hmenue']//a[contains(text(),'Results')]"));
    results.click();
    Thread.sleep(5000);
    
  

//mouseoverEvent Command-3
    
    WebElement moveonmenu= driver.findElement(By.xpath("//div[@id='myNavbar']//a[contains(.,'Regional Network')]"));
    actions.moveToElement(moveonmenu);
    actions.perform();
    WebElement moveonmenu1= driver.findElement(By.xpath("//div[@id='myNavbar']//a[contains(text(),'Regional Centers')]"));
    actions.moveToElement(moveonmenu1);
    actions.click().build().perform();
    
    Thread.sleep(5000);


  
 //Drag and Drop Command-4   
    driver.navigate().to("http://jqueryui.com/droppable/");
    
    WebDriverWait wait = new WebDriverWait(driver, 5);
	wait.until(ExpectedConditions.frameToBeAvailableAndSwitchToIt(By.cssSelector(".demo-frame")));
	
    WebElement Sourcelocator = driver.findElement(By.xpath(".//*[@id='draggable']"));
	WebElement Destinationlocator = driver.findElement(By.xpath(".//*[@id='droppable']"));
	
	//action.dragAndDrop(Sourcelocator, Destinationlocator).build().perform();
	action.dragAndDrop(Sourcelocator, Destinationlocator).build().perform();
	
	  Thread.sleep(5000);


//Double Click Command-5   
	
	driver.navigate().to("http://api.jquery.com/dblclick/");
	
	driver.switchTo().frame(0);
	WebElement element = driver.findElement(By.cssSelector("html>body>div"));
	//((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element);
	
	 JavascriptExecutor J = (JavascriptExecutor) driver;
	 J.executeScript("arguments[0].scrollIntoView();", element); //   this line has javascript error
   
	
	Thread.sleep(5000);	 
	//WebElement element = driver.findElement(By.cssSelector("html>body>div"));
	//Actions action2 = new Actions(driver).doubleClick(element);
	actions.doubleClick(element).build().perform();
	Thread.sleep(5000); 

//Scroll up and down command-6
	
	driver.navigate().to(Url_Naukari);
    Thread.sleep(5000);	 
	
	 JavascriptExecutor jse = (JavascriptExecutor) driver;
	 //vertical
	
	 jse.executeScript("window.scrollBy(0,500)", "");
	 Thread.sleep(5000);
	 //horizetilh   
	  jse.executeScript("window.scrollBy(-100,0)", "");

	   
		Thread.sleep(5000);	 
   
	   WebElement element2 = driver.findElement(By.xpath("html/body/div[3]/div/div[2]/ul/li[14]/a"));
		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", element2);
		
		Thread.sleep(5000);	 
	  
//Alert Handlng-7
			  
	  	driver.navigate().to("http://demo.guru99.com/V4/");
	    driver.findElement(By.name("uid")).sendKeys("mngr54743");					
	    driver.findElement(By.name("password")).sendKeys("tEqarej");					
	    driver.findElement(By.name("btnLogin")).submit();
	    
	    Alert alert=driver.switchTo().alert();		
		
	    // Capturing/get alert message.    
	    String alertMessage=driver.switchTo().alert().getText();	
	    System.out.println(alertMessage);
	    alert.accept();	
	    
	    driver.findElement(By.name("uid")).sendKeys("mngr54743");					
	    driver.findElement(By.name("password")).sendKeys("tEqarej");					
	    driver.findElement(By.name("btnLogin")).submit();
	    
	    alert.dismiss();	

//Page Source Command-8 ------------------------
		
	    driver.get("http://puchd.ac.in/");
	    //driver.navigate().to("http://du.ac.in/");
	    
		  Thread.sleep(2000);
	
	    if(driver.getPageSource().contains("Established in 1882 as University"))
	    {
	       System.out.println(" Text is persent");
	
	    }
	   else
	   {
		    System.out.println(" Text is not persent");
	
	   }	  

//List box-9 -----------------------------
	    driver.navigate().to("file:///C:/Ashu%20Folder/Actions_Examples/Lisrbox/list-box.html");
	    Thread.sleep(5000);
	   

	    WebElement val=driver.findElement(By.xpath(".//*[@id='selenium_commands']"));
	    
		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", val);

	    
	    Select s=new Select(val);
	    List<WebElement> allvals=s.getOptions();
	   
	    for(int i=0;i<allvals.size();i++)
	    {
		     Thread.sleep(1000);
		     System.out.println("CheckBox:"+ allvals.get(i).getAttribute("value"));
		     s.selectByIndex(i); //select one by one
	    }
	    
	    s.deselectAll();

	    
	    s.selectByIndex(0);
	    s.selectByIndex(1);   
	    
	    Thread.sleep(1000);*/

//Dropdwon Handling -10 -----------------------------
	    driver.navigate().to("file:///C:/Ashu%20Folder/Actions_Examples/Lisrbox/list-box.html");
	    Thread.sleep(5000);
	   

	    WebElement va2=driver.findElement(By.xpath(".//*[@id='continents']"));
	    
		((JavascriptExecutor) driver).executeScript("arguments[0].scrollIntoView();", va2);

	    
	    Select s1=new Select(va2);
	    //List<WebElement> allvals1=s1.getOptions();
	   
	    /*for(int i=0;i<allvals1.size();i++)
	    {
		     Thread.sleep(1000);
		     System.out.println("CheckBox:"+ allvals1.get(i).getAttribute("value"));
		     s1.selectByIndex(i); //select one by one
	    }*/
	    
	    s1.selectByIndex(0);
	    //s1.selectByValue("Africa");   
	    s1.selectByVisibleText("Antartica");
	    
	    Thread.sleep(1000);	    
	    
  }
  
 
  
  @After
  public void TearDown() throws Exception {
    driver.quit();
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
      fail(verificationErrorString);
    }
  }

  private boolean isElementPresent(By by) {
    try {
      driver.findElement(by);
      return true;
    } catch (NoSuchElementException e) {
      return false;
    }
  }

  private boolean isAlertPresent() {
    try {
      driver.switchTo().alert();
      return true;
    } catch (NoAlertPresentException e) {
      return false;
    }
  }

  private String closeAlertAndGetItsText() {
    try {
      Alert alert = driver.switchTo().alert();
      String alertText = alert.getText();
      if (acceptNextAlert) {
        alert.accept();
      } else {
        alert.dismiss();
      }
      return alertText;
    } finally {
      acceptNextAlert = true;
    }
  }
}

	====================================
